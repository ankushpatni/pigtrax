- Install Postgres 9.4 or 9.4 and populate the schema using SQL file checked in <PigTrax-Home>/git-repo/src/db/schema

- Use the PigTrax-7-6thJuly.sql schema checked in git -> db/schema to populate the DB. Just paste it in SQL editor and execute. Refresh the view in pgadmin and you should see pigtrax and pigtraxrefdata schemas in there. The owner of the both the schema is pitraxadmin and the pass for pitraxadmin is k3rm1t (It is in the sql file)

- Use PigTraxRefData_Population.sql in the same directory to populate various ref data.
The above SQL would also create 4 dummy users in the database. 1 pigtrax super admin, 1 pigtrax data cfg manager, 1 farm super admin,, 1 far data cfg manager. 
The roles are:

pigtraxsuperadmin
pigtraxdatacfgmgr
pigtraxfarmsuperadmin
pigtraxdatacfgmgr

The password for them is india.

	------------------
- Get access to the repository.
- Clone the repo in a local dir, we call it <pigtrax_home>
- Download and install eclipse, Maven 3.x, Java 8, tomcat 7.
-Build a war
    - cd <pigtrax_home>
	- Generate eclipse .project and .classpath files using command- mvn eclipse:eclipse
	- mvn clean install should create a war file in target dir
- Place the war in tomcat/webapps and boot the server

-----------------------------------	
Deploying war in tomcat through maven:
- In tomcat-users.xml ($TOMCAT_HOME/conf/) add roles â€“ manager-gui and manager-script and

assign the roles to admin user

<role rolename="manager-gui"/>

<role rolename="manager-script"/>

<user username="admin" password="password" roles="manager-gui,manager-script" />

- Update maven settings.xml ($MAVEN-HOME/conf/) to include tomcat server information

<server> 

<id>TomcatServer</id> 

<username>admin</username> 

<password>password</password>

</server>

- To run from command prompt, execute the command
    mvn clean package tomcat7:redeploy